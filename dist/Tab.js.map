{"version":3,"sources":["../src/Tab.js"],"sourcesContent":["import { EventEmitter } from 'node:events';\nimport Hypermap from './Hypermap.js';\nimport HyperProxyHandler from './HyperProxyHandler.js';\n\nexport default class Tab extends EventEmitter {\n\tpage;\n\thypermap = null;\n\n\tconstructor(page) {\n\t\tsuper();\n\t\tthis.page = page;\n\n\t\tthis.page.on('contentchanged', async () => {\n\t\t\tawait this.syncData();\n\t\t\tthis.emit('contentchanged');\n\t\t});\n\n\t\tthis.page.on('console', msg => {\n\t\t\tthis.emit('console', msg);\n\t\t});\n\t}\n\n\tasync goto(...args) {\n\t\tawait this.page.goto(...args);\n\t\tawait this.syncData();\n\t}\n\n\turl() {\n\t\treturn this.page.url();\n\t}\n\n\tasync syncData() {\n\t\tconst hypermapJson = await this.page.evaluate(() => {\n\t\t\treturn globalThis.serializedHypermap();\n\t\t});\n\t\tconst unwrappedHypermap = Hypermap.fromLiteral(hypermapJson);\n\t\t// this.hypermap = unwrappedHypermap;\n\t\t// const proxy = {\n\t\t// \tget(target, prop) {\n\t\t// \t\tconsole.log('OUTER', target, prop);\n\t\t// \t\tReflect.get(...arguments);\n\t\t// \t}\n\t\t// };\n\t\tconst proxy = new HyperProxyHandler(this.page, this);\n\t\tthis.hypermap = new Proxy(unwrappedHypermap, proxy);\n\t}\n\n\t// async $(key) {\n\t// \tconst node = (await this.data()).at(...path);\n\n\t// \tif (node == undefined) {\n\t// \t\tthrow new Error('Node does not exist');\n\t// \t}\n\n\t// \tif (node.attributes === undefined) {\n\t// \t\tthrow new Error('Attempting to fetch a non-fetchable node');\n\t// \t}\n\n\t// \tif (node.attributes.rels?.includes('transclude')) {\n\t// \t\tawait this.page.evaluate(async path => {\n\t// \t\t\tawait globalThis.hypermap.at(...path).fetch();\n\t// \t\t}, path);\n\t// \t} else {\n\t// \t\tawait Promise.all([\n\t// \t\t\tthis.page.waitForNavigation(),\n\t// \t\t\tthis.page.evaluate(path => {\n\t// \t\t\t\tglobalThis.hypermap.at(...path).fetch();\n\t// \t\t\t}, path)\n\t// \t\t]);\n\t// \t}\n\n\t// \tawait this.syncData();\n\t// }\n\n\t// async set(path, value) {\n\t// \tawait this.page.evaluate((path, value) => {\n\t// \t\tglobalThis.hypermap.at(...path.slice(0, -1)).set(path.at(-1), value);\n\t// \t}, path, value);\n\t// }\n}\n"],"names":["Tab","EventEmitter","page","hypermap","constructor","on","syncData","emit","msg","goto","args","url","hypermapJson","evaluate","globalThis","serializedHypermap","unwrappedHypermap","Hypermap","fromLiteral","proxy","HyperProxyHandler","Proxy"],"mappings":";;;;+BAIA;;aAAqBA;;4BAJQ;iEACR;0EACS;;;;;;AAEf,MAAMA,YAAYC,wBAAY;IAC5CC,KAAK;IACLC,WAAW,IAAI,CAAC;IAEhBC,YAAYF,IAAI,CAAE;QACjB,KAAK;QACL,IAAI,CAACA,IAAI,GAAGA;QAEZ,IAAI,CAACA,IAAI,CAACG,EAAE,CAAC,kBAAkB,UAAY;YAC1C,MAAM,IAAI,CAACC,QAAQ;YACnB,IAAI,CAACC,IAAI,CAAC;QACX;QAEA,IAAI,CAACL,IAAI,CAACG,EAAE,CAAC,WAAWG,CAAAA,MAAO;YAC9B,IAAI,CAACD,IAAI,CAAC,WAAWC;QACtB;IACD;IAEA,MAAMC,KAAK,GAAGC,IAAI,EAAE;QACnB,MAAM,IAAI,CAACR,IAAI,CAACO,IAAI,IAAIC;QACxB,MAAM,IAAI,CAACJ,QAAQ;IACpB;IAEAK,MAAM;QACL,OAAO,IAAI,CAACT,IAAI,CAACS,GAAG;IACrB;IAEA,MAAML,WAAW;QAChB,MAAMM,eAAe,MAAM,IAAI,CAACV,IAAI,CAACW,QAAQ,CAAC,IAAM;YACnD,OAAOC,WAAWC,kBAAkB;QACrC;QACA,MAAMC,oBAAoBC,iBAAQ,CAACC,WAAW,CAACN;QAC/C,qCAAqC;QACrC,kBAAkB;QAClB,uBAAuB;QACvB,wCAAwC;QACxC,+BAA+B;QAC/B,KAAK;QACL,KAAK;QACL,MAAMO,QAAQ,IAAIC,0BAAiB,CAAC,IAAI,CAAClB,IAAI,EAAE,IAAI;QACnD,IAAI,CAACC,QAAQ,GAAG,IAAIkB,MAAML,mBAAmBG;IAC9C;AAkCD"}