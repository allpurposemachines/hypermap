{"version":3,"sources":["../src/Hyperlist.js"],"sourcesContent":["import Hypermap from './Hypermap.js';\nimport { isMap } from './utils/json_processing.js';\n\nexport default class Hyperlist extends EventTarget {\n\tarray;\n\t#parent;\n\n\t/**\n\t * @param { import('./Hypermap.js').Value[] } array \n\t * @param { import('./Hypermap.js').Node } parent \n\t */\n\tconstructor(array, parent) {\n\t\tsuper();\n\t\tthis.array = array;\n\t\tthis.#parent = parent;\n\t}\n\n\t/** @param { unknown } value */\n\tstatic isHyperlist(value) {\n\t\treturn value instanceof Hyperlist;\n\t}\n\n\t/**\n\t * @param { unknown[] } array\n\t * @param { import('./Hypermap.js').Node } parent\n\t */\n\tstatic fromLiteral(array, parent) {\n\t\tconst hyperlist = new this([], parent);\n\t\t/** @type { import('./Hypermap.js').Value[] } */\n\t\tconst convertedArray = array.map(value => {\n\t\t\tif (isMap(value)) {\n\t\t\t\tconst hypermapLiteral = /** @type { import('./Hypermap.js').HypermapLiteral } */(value);\n\t\t\t\treturn Hypermap.fromLiteral(hypermapLiteral, hyperlist);\n\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\treturn this.fromLiteral(value, hyperlist);\n\t\t\t} else {\n\t\t\t\tconst valueLiteral = /** @type { import('./Hypermap.js').ValueLiteral} */(value);\n\t\t\t\treturn valueLiteral;\n\t\t\t}\n\t\t});\n\t\thyperlist.array = convertedArray;\n\t\treturn hyperlist;\n\t}\n\n\tasync hydrate() {\n\t\tthis.children().forEach(child => {\n\t\t\tchild.hydrate();\n\t\t})\n\t}\n\n\t/**\n\t * @param { (string|number)[] } path\n\t * @returns { import('./Hypermap.js').Value | undefined }\n\t */\n\tat(...path) {\n\t\tif (path.length === 0) {\n\t\t\treturn this;\n\t\t}\n\t\t\n\t\t/** @type { import('./Hypermap.js').Value | undefined } */\n\t\tconst head = this.array.at(/** @type { number } */(path.at(0)));\n\t\tif (head === undefined || (path.length > 1 && !(Hyperlist.isHyperlist(head) || Hypermap.isHypermap(head)))) {\n\t\t\treturn undefined;\n\t\t}\n\t\t\n\t\tif (path.length === 1) {\n\t\t\treturn head;\n\t\t} else {\n\t\t\tconst node = /** @type { import('./Hypermap.js').Node } */(head);\n\t\t\treturn node.at(...path.slice(1));\n\t\t}\n\t}\n\n\t/** @param { (value: import('./Hypermap.js').Value, index: number) => void } callback */\n\tforEach(callback) {\n\t\tthis.array.forEach(callback);\n\t}\n\n\tlength() {\n\t\treturn this.array.length;\n\t}\n\n\t/** @param { import('./Hypermap.js').Value } value */\n\tprepend(value) {\n\t\tthis.array.unshift(value);\n\t}\n\n\t/** @param { import('./Hypermap.js').Value } value */\n\tappend(value) {\n\t\tthis.array.push(value);\n\t}\n\n\t/**\n\t * @param { number } index\n\t * @param { import('./Hypermap.js').Value } value\n\t * */\n\tset(index, value) {\n\t\tthis.array[index] = value;\n\t}\n\n\t/**\n\t * @param { number } index\n\t * @param { import('./Hypermap.js').Value } value\n\t * */\t\n\tinsert(index, value) {\n\t\tthis.array.splice(index, 0, value);\n\t}\n\n\t/**\n\t * @param { number } index\n\t * */\n\tdelete(index) {\n\t\tthis.array.splice(index, 1);\n\t}\n\n\tparent() {\n\t\treturn this.#parent;\n\t}\n\n\t/** @returns { import('./Hypermap.js').Node[] } */\n\tchildren() {\n\t\tconst nodeArray = this.array\n\t\t\t.filter(value => Hyperlist.isHyperlist(value) || Hypermap.isHypermap(value));\n\t\treturn /** @type { import('./Hypermap.js').Node[] } */(nodeArray);\n\t}\n\n\t/** @returns { (string|number)[] } */\n\tpath() {\n\t\tif (this.parent() === null) {\n\t\t\treturn [];\n\t\t} else {\n\t\t\tconst key = /** @type { number } */ (this.parent().keyFor(this));\n\t\t\treturn this.parent().path().concat(key);\n\t\t}\n\t}\n\n\t/**\n\t * @param { string } key \n\t * @param { unknown } values \n\t */\n\tasync $(key, values) {\n\t\tconst unknownVal = this.at(key);\n\n\t\tif (!Hypermap.isHypermap(unknownVal)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst hypermap = /** @type { Hypermap } */(unknownVal);\n\n\t\tif (values) {\n\t\t\tObject.entries(values).forEach(([key, value]) => {\n\t\t\t\thypermap.set(key, value);\n\t\t\t});\n\t\t}\n\t\tawait hypermap.fetch();\n\t}\n\n\t/** @param { import('./Hypermap.js').Node } node */\n\tkeyFor(node) {\n\t\treturn this.array.indexOf(node);\n\t}\n\n\ttoJSON() {\n\t\treturn this.array;\n\t}\n}\n"],"names":["Hyperlist","EventTarget","array","parent","constructor","isHyperlist","value","fromLiteral","hyperlist","convertedArray","map","isMap","hypermapLiteral","Hypermap","Array","isArray","valueLiteral","hydrate","children","forEach","child","at","path","length","head","undefined","isHypermap","node","slice","callback","prepend","unshift","append","push","set","index","insert","splice","delete","nodeArray","filter","key","keyFor","concat","$","values","unknownVal","hypermap","Object","entries","fetch","indexOf","toJSON"],"mappings":"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"}