{"version":3,"sources":["../src/Hypermap.js"],"sourcesContent":["import { isMap } from './utils/json_processing.js';\nimport Hyperlist from './Hyperlist.js';\n\n/** @typedef { {href?: string, method?: string, rels?: string[], script?: string} } Attributes */\n/** @typedef { null | boolean | number | string } ValueLiteral */\n/** @typedef { Record<string, unknown> } HypermapLiteral */\n/** @typedef { unknown[] } HyperlistLiteral */\n/** @typedef { Hypermap | Hyperlist } Node */\n/** @typedef { Node | ValueLiteral } Value */\n\nexport default class Hypermap extends EventTarget {\n\t/** @type { Attributes } */\n\tattributes;\n\tmap;\n\t/** @type { Node | null } */\n\t#parent;\n\n\t/**\n\t * @param { object } data\n\t * @param { Attributes } attributes\n\t * @param { Node | null } parent\n\t */\n\tconstructor(data, attributes, parent) {\n\t\tsuper();\n\t\tthis.map = new Map(Object.entries(data));\n\t\tthis.attributes = attributes;\n\t\tthis.#parent = parent;\n\t}\n\n\t/** @param { unknown } value */\n\tstatic isHypermap(value) {\n\t\treturn value instanceof Hypermap;\n\t}\n\n\t/**\n\t * @param { HypermapLiteral } object\n\t * @param { Node | null } parent\n\t */\n\tstatic fromLiteral(object, parent = null) {\n\t\t/** @type { Attributes } */\n\t\tconst attributes = object['@'] ?? {};\n\t\tdelete object['@'];\n\n\t\tlet hypermap = new this(object, attributes, parent);\n\t\thypermap.forEach(\n\t\t\t/**\n\t\t\t * @param { string } key\n\t\t\t * @param { unknown } value\n\t\t\t*/\n\t\t\t(value, key) => {\n\t\t\t\tif (isMap(value)) {\n\t\t\t\t\tconst hypermapLiteral = /** @type { HypermapLiteral } */ (value);\n\t\t\t\t\thypermap.map.set(key, this.fromLiteral(hypermapLiteral, hypermap));\n\t\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\t\tconst hyperlistLiteral = /** @type { HyperlistLiteral } */ (value);\n\t\t\t\t\thypermap.map.set(key, Hyperlist.fromLiteral(hyperlistLiteral, hypermap));\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\treturn hypermap;\n\t}\n\n\tasync hydrate() {\n\t\tif (this.attributes.script) {\n\t\t\ttry {\n\t\t\t\tawait import(this.attributes.script);\n\t\t\t} catch(err) {\n\t\t\t\t// @ts-expect-error: err is fine\n\t\t\t\tconsole.log(`Error importing script at ${this.attributes.script}`, err.message);\n\t\t\t}\n\t\t}\n\t\n\t\tif (this.attributes.rels?.includes('transclude')) {\n\t\t\tawait this.fetchTransclusion();\n\t\t}\n\n\t\tthis.children().forEach(child => {\n\t\t\tchild.hydrate();\n\t\t})\n\t}\n\n\tasync fetch() {\n\t\tif (this.attributes.href === null || this.attributes.href === undefined) {\n\t\t\treturn Promise.reject('No href');\n\t\t}\n\n\t\tconst method = this.attributes.method || 'get';\n\t\tconst url = new URL(this.attributes.href, window.location.href);\n\n\t\tif (method === 'get') {\n\t\t\tif (this.attributes.rels?.includes('transclude')) {\n\t\t\t\tawait this.fetchTransclusion();\n\t\t\t} else {\n\t\t\t\twindow.location.assign(url);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tconst headers = {\n\t\t\t'Content-Type': 'application/json'\n\t\t};\n\n\t\t/** @type { Record<string, Value> } */\n\t\tconst body = {};\n\t\tthis.forEach((value, key) => {\n\t\t\tbody[key] = value;\n\t\t});\n\n\t\tconst options = { method, headers, body: JSON.stringify(body) };\n\t\tconst response = await fetch(url, options);\n\n\t\tif (response.redirected) {\n\t\t\twindow.location.assign(response.url);\n\t\t}\n\t}\n\n\t/**\n\t * @param { string } key\n\t * @param { Record<string, Value>= } values\n\t*/\n\tasync $(key, values) {\n\t\tconst node = this.at(key);\n\t\tif (values) {\n\t\t\tObject.entries(values).forEach(([key, value]) => {\n\t\t\t\tnode.set(key, value);\n\t\t\t});\n\t\t}\n\t\tawait node.fetch();\n\t}\n\n\t/** @param { (value: Value, key: string) => void } callback */\n\tforEach(callback) {\n\t\tthis.map.forEach(callback);\n\t}\n\n\t/** @param { (string|number)[] } path */\n\tat(...path) {\n\t\tif (path.length === 0) {\n\t\t\treturn this;\n\t\t}\n\t\t\n\t\t// @ts-expect-error\n\t\tconst head = this.map.get(path.at(0));\n\t\tif (head === undefined || (path.length > 1 && typeof head.at !== 'function')) {\n\t\t\treturn undefined;\n\t\t}\n\t\t\n\t\tif (path.length === 1) {\n\t\t\treturn head;\n\t\t} else {\n\t\t\treturn head.at(...path.slice(1));\n\t\t}\n\t}\n\n\tparent() {\n\t\treturn this.#parent;\n\t}\n\n\t/** @returns { Node[] } */\n\tchildren() {\n\t\treturn [...this.map.values()]\n\t\t\t.filter(value => value.isCollection && value.isCollection());\n\t}\n\t\n\t/** @returns { (string|number)[] } */\n\tpath() {\n\t\tif (this.parent() === null) {\n\t\t\treturn [];\n\t\t} else {\n\t\t\tconst parent = /** @type { Node } */(this.parent());\n\t\t\tconst key = /** @type { string } */(parent.keyFor(this));\n\t\t\treturn parent.path().concat(key);\n\t\t}\n\t}\n\n\t/** @param { Hypermap | Hyperlist } node */\n\tkeyFor(node) {\n\t\tfor (const [key, value] of this.map) {\n\t\t\tif (value === node) {\n\t\t\t\treturn key;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\t/** @param { string } key */\n\thas(key) {\n\t\treturn this.map.has(key);\n\t}\n\n\t/**\n\t * @param { string } key\n\t * @param { Value } value\n\t */\n\tset(key, value) {\n\t\tthis.map.set(key, value);\n\t\tif (window) {\n\t\t\tconst event = new CustomEvent('changed', { detail: { key, value } });\n\t\t\tthis.dispatchEvent(event);\n\t\t\t// @ts-expect-error\n\t\t\twindow.contentChanged();\n\t\t}\n\t\treturn this;\n\t}\n\n\t/** @param { string } key */\n\tdelete(key) {\n\t\tthis.map.delete(key);\n\t}\n\n\tkeys() {\n\t\treturn this.map.keys();\n\t}\n\n\t/** @param { Hypermap } otherHypermap */\n\treplace(otherHypermap) {\n\t\tthis.map = otherHypermap.map;\n\t\treturn this;\n\t}\n\n\tlength() {\n\t\treturn [...this.map.values()].length;\n\t}\n\n\tisCollection() {\n\t\treturn true;\n\t}\n\n\tasync fetchTransclusion() {\n\t\tif (this.attributes.href) {\n\t\t\tconst response = await fetch(this.attributes.href);\n\t\t\tconst json = await response.json();\n\t\t\t// Todo: should handle scripts and sub-transclusions\n\t\t\t// @ts-expect-error\n\t\t\tconst newNode = this.constructor.fromLiteral(json);\n\t\t\tthis.replace(newNode);\n\t\t}\n\t}\n\n\ttoJSON() {\n\t\tconst obj = Object.fromEntries(this.map);\n\t\tif (Object.entries(this.attributes).length > 0) {\n\t\t\tobj['@'] = this.attributes;\n\t\t}\n\t\treturn obj;\n\t}\n\n\ttoString() {\n\t\treturn JSON.stringify(this, null, 2);\n\t}\n}\n"],"names":["Hypermap","EventTarget","attributes","map","parent","constructor","data","Map","Object","entries","isHypermap","value","fromLiteral","object","hypermap","forEach","key","isMap","hypermapLiteral","set","Array","isArray","hyperlistLiteral","Hyperlist","hydrate","script","err","console","log","message","rels","includes","fetchTransclusion","children","child","fetch","href","undefined","Promise","reject","method","url","URL","window","location","assign","headers","body","options","JSON","stringify","response","redirected","$","values","node","at","callback","path","length","head","get","slice","filter","isCollection","keyFor","concat","has","event","CustomEvent","detail","dispatchEvent","contentChanged","delete","keys","replace","otherHypermap","json","newNode","toJSON","obj","fromEntries","toString"],"mappings":"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"}